{"version":3,"sources":["webpack://assapir.github.io/./src/components/bio.js","webpack://assapir.github.io/./src/components/layout.js","webpack://assapir.github.io/./src/templates/tag.js"],"names":["author","useStaticQuery","site","siteMetadata","className","dir","name","summary","location","title","children","isRootPath","pathname","header","Link","to","Date","getFullYear","href","target","rel","data","pageContext","tag","siteTitle","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","date","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"mJA0CA,IA/BY,WAAO,IAAD,EAkBVA,EAAM,WAjBCC,oBAAe,cAiBRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,MAAMC,IAAI,QACtBL,aAAA,EAAAA,EAAQM,OACP,2CACc,8BAASN,EAAOM,MAD9B,KAC8CN,aAAA,EAAAA,EAAQO,UAAW,S,oECqBzE,IApDe,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SACtBC,EAASF,EACb,sBAAIP,UAAU,gBACZ,gBAAC,EAAAU,KAAD,CAAMC,GAAG,KAAKN,IAGhB,gBAAC,EAAAK,KAAD,CAAMV,UAAU,mBAAmBW,GAAG,KACnCN,GAIL,OACE,uBAAKL,UAAU,iBAAiB,oBAAmBO,EAAYN,IAAI,QACjE,0BAAQD,UAAU,iBAAiBS,GACnC,4BAAOH,GACP,0BAAQL,IAAI,OACV,gBAAC,IAAD,MADF,mBACyB,IAAIW,MAAOC,cADpC,mBAGE,qBACEC,KAAK,2BACLC,OAAO,SACPC,IAAI,uBAHN,UAHF,sBAWc,IACZ,qBACEF,KAAK,2BACLC,OAAO,SACPC,IAAI,uBAHN,gBAZF,IAoBE,2BApBF,oBAqBoB,IAClB,qBACEF,KAAK,+CACLC,OAAO,SACPC,IAAI,uBAHN,UAtBF,Q,2EC2CN,UA3DoB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAad,EAAe,EAAfA,SAChCe,EAAQD,EAARC,IACFC,EAAYH,EAAKnB,KAAKC,aAAaM,MACnCgB,EAAQJ,EAAKK,kBAAkBC,MAErC,OACE,gBAAC,IAAD,CAAQlB,MAAOe,EAAWhB,SAAUA,GAClC,+BACE,8BACE,8CAAyBe,EAAzB,OAEF,uBAAKnB,UAAU,kBACZqB,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNpB,EAAQoB,EAAKC,YAAYrB,OAASoB,EAAKE,OAAOC,KACpD,OACE,uBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,0BACE,gBAAC,EAAAlB,KAAD,CAAMC,GAAIc,EAAKE,OAAOC,MAAOvB,IAE/B,6BAAQoB,EAAKC,YAAYI,MACzB,qBAAGC,wBAAyB,CAAEC,OAAQP,EAAKQ,WAC3C","file":"component---src-templates-tag-js-14aee536f5bd01e76464.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n// import { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\" dir=\"rtl\">\n      {author?.name && (\n        <span>\n          נכתב על ידי <strong>{author.name}</strong> {author?.summary || null}\n        </span>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Bio from \"./bio\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  const header = isRootPath ? (\n    <h1 className=\"main-heading\">\n      <Link to=\"/\">{title}</Link>\n    </h1>\n  ) : (\n    <Link className=\"header-link-home\" to=\"/\">\n      {title}\n    </Link>\n  )\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath} dir=\"auto\">\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer dir=\"ltr\">\n        <Bio />© Assaf Sapir, {new Date().getFullYear()}, Built with\n        {` `}\n        <a\n          href=\"https://www.gatsbyjs.com\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          Gatsby\n        </a>\n        .{` `}\n        Hosted with{\" \"}\n        <a\n          href=\"https://pages.github.com\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          GitHub Pages\n        </a>\n        .\n        <br />\n        Source code on my{\" \"}\n        <a\n          href=\"https://github.com/assapir/assapir.github.io\"\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          GitHub\n        </a>\n        .\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nconst TagTemplate = ({ data, pageContext, location }) => {\n  const { tag } = pageContext\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout title={siteTitle} location={location}>\n      <article>\n        <header>\n          <h1>{`פוסטים עם התגית '${tag}':`}</h1>\n        </header>\n        <div className=\"post-list-item\">\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <div key={node.fields.slug}>\n                <h2>\n                  <Link to={node.fields.slug}>{title}</Link>\n                </h2>\n                <small>{node.frontmatter.date}</small>\n                <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n                <br />\n              </div>\n            )\n          })}\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 200, format: HTML)\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default TagTemplate\n"],"sourceRoot":""}