{"version":3,"sources":["webpack://assapir.github.io/./src/components/bio.js","webpack://assapir.github.io/./src/components/layout.js","webpack://assapir.github.io/./src/pages/tags.js"],"names":["author","useStaticQuery","site","siteMetadata","className","dir","name","summary","location","title","children","isRootPath","pathname","header","Link","to","Date","getFullYear","href","data","siteTitle","group","allMarkdownRemark","console","log","map","tag","key","fieldValue","totalCount"],"mappings":"mJA0CA,IA/BY,WAAO,IAAD,EAkBVA,EAAM,WAjBCC,oBAAe,cAiBRC,KAAKC,oBAAb,aAAG,EAAwBH,OAEvC,OACE,uBAAKI,UAAU,MAAMC,IAAI,QACtBL,aAAA,EAAAA,EAAQM,OACP,2CACc,8BAASN,EAAOM,MAD9B,KAC8CN,aAAA,EAAAA,EAAQO,UAAW,S,oECJzE,IA3Be,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SACtBC,EAASF,EACb,sBAAIP,UAAU,gBACZ,gBAAC,EAAAU,KAAD,CAAMC,GAAG,KAAKN,IAGhB,gBAAC,EAAAK,KAAD,CAAMV,UAAU,mBAAmBW,GAAG,KACnCN,GAIL,OACE,uBAAKL,UAAU,iBAAiB,oBAAmBO,EAAYN,IAAI,QACjE,0BAAQD,UAAU,iBAAiBS,GACnC,4BAAOH,GACP,0BAAQL,IAAI,OACV,gBAAC,IAAD,MADF,MACY,IAAIW,MAAOC,cADvB,mBAGE,qBAAGC,KAAK,4BAAR,UAHF,uBAIc,qBAAGA,KAAK,4BAAR,oB,2EC2BpB,UA/Ca,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMX,EAAe,EAAfA,SACdY,EAAYD,EAAKjB,KAAKC,aAAaM,MACnCY,EAAQF,EAAKG,mBAAqBH,EAAKG,kBAAkBD,MAG/D,OAFAE,QAAQC,IAAIL,EAAKG,mBAGf,gBAAC,IAAD,CAAQb,MAAOW,EAAWZ,SAAUA,GAClC,+BACE,uCACA,uBAAKJ,UAAU,YACZiB,GACCA,EAAMI,KACJ,SAAAC,GAAG,OACDA,GACE,uBAAKC,IAAKD,EAAIE,YACZ,yBACE,gBAAC,EAAAd,KAAD,CAAMC,GAAE,SAAWW,EAAIE,WAAf,KACLF,EAAIE,WADP,IACoB,KAEA,IAAnBF,EAAIG,WAAmB,SAAW,SAClCH,EAAIG","file":"component---src-pages-tags-js-4ee48d4bbce9d24d16a3.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n// import { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n\n  return (\n    <div className=\"bio\" dir=\"rtl\">\n      {author?.name && (\n        <span>\n          נכתב על ידי <strong>{author.name}</strong> {author?.summary || null}\n        </span>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Bio from \"./bio\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  const header = isRootPath ? (\n    <h1 className=\"main-heading\">\n      <Link to=\"/\">{title}</Link>\n    </h1>\n  ) : (\n    <Link className=\"header-link-home\" to=\"/\">\n      {title}\n    </Link>\n  )\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath} dir=\"auto\">\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer dir=\"ltr\">\n        <Bio />© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>.{` `}\n        Hosted with <a href=\"https://pages.github.com\">GitHub Pages</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nconst Tags = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const group = data.allMarkdownRemark && data.allMarkdownRemark.group\n  console.log(data.allMarkdownRemark)\n\n  return (\n    <Layout title={siteTitle} location={location}>\n      <article>\n        <h1>כל התגיות</h1>\n        <div className=\"tag-list\">\n          {group &&\n            group.map(\n              tag =>\n                tag && (\n                  <div key={tag.fieldValue}>\n                    <p>\n                      <Link to={`/tags/${tag.fieldValue}/`}>\n                        {tag.fieldValue}:{\" \"}\n                      </Link>\n                      {tag.totalCount === 1 ? \" פוסט \" : \"פוסטים\"}\n                      {tag.totalCount}\n                    </p>\n                  </div>\n                )\n            )}\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nexport default Tags\n"],"sourceRoot":""}