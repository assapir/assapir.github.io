{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/rust/vars/",
    "result": {"data":{"site":{"siteMetadata":{"title":"מחשבות על תכנות"}},"markdownRemark":{"id":"71b4c8aa-c43a-5dd1-b5f3-92dbc931db80","excerpt":"…","html":"<p>לאחר שיצרנו את התוכנה הראשונה שלנו, נוכל לשים לב די בקלות שהיא לא עושה שום דבר מתוחכם. אולם, בשביל לעשות דברים מתוחכמים, יש צורך ללמוד כמה קונספטים, כאשר רוב הקונספטים האלו קיימים ברוב (ואולי בכל) שפות התכנות, אבל לעיתים קצת שונים בראסט.\nהקונספט הראשון שנדבר עליו, ואולי החשוב ביותר, הוא <strong>משתנים</strong>.</p>\n<h3>הצהרה על משתנה</h3>\n<p>ניצור פרויקט חדש (אם לא זוכרים כיצד, אפשר להסתכל על ה<a href=\"https://blog.ass.af/rust/hello_world/\">פוסט הקודם</a> ולהיזכר איך לעשות את זה בעזרת קרגו). נשנה את הקוד בקובץ <code class=\"language-text\">src/main.rs</code> לקוד הבא:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value of x is: {}\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>נריץ את התוכנה המדהימה שכתבנו באמצעות הפקודה</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span data-user=assaf data-host=ass.af></span><span></span><span></span></span>cargo run\n…\nThe value of x is: <span class=\"token number\">5</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>יש! הכל עבד כצפוי.</p>\n<p>נעבור על מה עשינו כאן: בשורה <em>1</em> הצהרנו כרגיל על הפונקציה <code class=\"language-text\">main</code>, שלא מקבלת שום ארגומנטים. בשורה <em>2</em> הצהרנו על <strong>משתנה</strong> בשם <code class=\"language-text\">x</code> באמצעות מילת המפתח <code class=\"language-text\">let</code>, ונתנו לו את הערך <code class=\"language-text\">5</code>. בשורה <em>3</em> השתמשנו במקרו <code class=\"language-text\">println</code> והדפסנו למסך את המשפט <code class=\"language-text\">The value of x is: 5</code>, כאשר במקום הסוגריים המסולסלים יבוא הייצוג של <code class=\"language-text\">x</code> כמחרוזת (String), כיוון שהוא המשתנה שנמצא אחרי הפסיק.</p>\n<p>אבל רגע! אם נסתכל בוויקיפדיה, נראה שראסט היא <a href=\"https://he.wikipedia.org/wiki/%D7%9E%D7%A2%D7%A8%D7%9B%D7%AA_%D7%98%D7%99%D7%A4%D7%95%D7%A1%D7%99%D7%9D#%D7%98%D7%99%D7%A4%D7%95%D7%A1%D7%99%D7%95%D7%AA_%D7%A1%D7%98%D7%98%D7%99%D7%AA\">שפה סטטית</a>, ולא דינמית, כלומר הטיפוס (או המילים אחרות, הסוג) של המשתנה <code class=\"language-text\">x</code> חייב להיות ידוע כבר בזמן הקימפול. אז איך זה כן עובד? הקומפיילר (rustc) מסיק את הטיפוסים של המשתנים כל פעם שהוא מסוגל (שזה רוב המקרים). בדוגמה שלנו, הקומפיילר יסיק שהטיפוס של <code class=\"language-text\">x</code> הוא <code class=\"language-text\">i32</code> - כלומר Integer בגודל 32 בתים signed (כשהכוונה ב”סימן” פה הכוונה ליכולת להיות שלילי). אם נרצה לקבוע את הטיפוס של המשתנה במפורש, נשנה את הקוד שלנו:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber 1\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> x<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u64</span> <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>אם נריץ את התוכנה שוב, נראה שבאופן לא מפתיע התוצאה לא השתנתה, אבל מאחורי הקלעים, הטיפוס של המשתנה השתנה, וכעת הוא מסוג <code class=\"language-text\">u64</code> - כלומר מספר בגודל 64 בתים, unsigned – כלומר שאינו יכול להיות שלילי. אפשר לראות את זה די בקלות אם ננסה לתת למשנה <code class=\"language-text\">x</code> ערך שלילי:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber 1\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> x<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u64</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>אם ננסה את להריץ את התוכנה עכשיו, נקבל את השגיאה הבאה:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span data-user=assaf data-host=ass.af></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span>cargo run\n   Compiling …\nerror<span class=\"token punctuation\">[</span>E0600<span class=\"token punctuation\">]</span>: cannot apply unary operator <span class=\"token variable\"><span class=\"token variable\">`</span>-<span class=\"token variable\">`</span></span> to <span class=\"token builtin class-name\">type</span> <span class=\"token variable\"><span class=\"token variable\">`</span>u64<span class=\"token variable\">`</span></span>\n --<span class=\"token operator\">></span> src/main.rs:2:18\n  <span class=\"token operator\">|</span>\n<span class=\"token number\">2</span> <span class=\"token operator\">|</span>     <span class=\"token builtin class-name\">let</span> x: u64 <span class=\"token operator\">=</span> -5<span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">|</span>                  ^^ cannot apply unary operator <span class=\"token variable\"><span class=\"token variable\">`</span>-<span class=\"token variable\">`</span></span>\n  <span class=\"token operator\">|</span>\n  <span class=\"token operator\">=</span> note: unsigned values cannot be negated\n\nerror: aborting due to previous error\n\nFor <span class=\"token function\">more</span> information about this error, try <span class=\"token variable\"><span class=\"token variable\">`</span>rustc --explain E0600<span class=\"token variable\">`</span></span><span class=\"token builtin class-name\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>השגיאה עצמה כתובה באנגלית ממש פשוטה, וזה, לעניות דעתי, אחת החוזקות של ראסט – גם כשכבר עושים טעות, די קל להבין מה הטעות ואיפה בדיוק היא נמצאת, כי הודעות השגיאה של הקומפיילר ברורות למדי - כתוב בדיוק באיזו שורה השגיאה (2), ומה בדיוק השגיאה היתה:\n<code class=\"language-text\">note: unsigned values cannot be negated</code> - בדיוק כמו שציפינו.</p>\n<p>ניתן למצוא את רשימת הטיפוסים המלאה של ראסט ב<a href=\"https://doc.rust-lang.org/reference/types.html\">תיעוד</a>.</p>\n<h3>השמה למשתנה</h3>\n<p>ברוב שפות התכנות, אפשר להכריז על משתנים, ולא לתת להם ערך כלל. למשל, בשפת C:</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-c line-numbers\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">;</span>\n   <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>והתכנה חוקית לגמרי ואפילו תתקמפל (אבל זה כנראה באג) והכל יעבוד. אבל אם ננסה לעשות אותו דבר בראסט:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber 1\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> x<span class=\"token punctuation\">:</span> <span class=\"token keyword\">u64</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value of x is: {}\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>נקבל את השגיאה:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span></span><span></span></span>println<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value of x is: {}\"</span>, x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                  ^ use of possibly-uninitialized <span class=\"token variable\"><span class=\"token variable\">`</span>x<span class=\"token variable\">`</span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>באמצעות השגיאה הזאת, אנחנו מבטיחים שאין מצב שאנחנו ניגשים לזיכרון לא מאותחל, ולא בטעות נבצע פעולות על NULL. אחלה – נמנעו לנו באגים טיפשיים!</p>\n<h3>משתנה שאי אפשר לשנות – Imutability</h3>\n<p>ברוב שפות התכנות, לאחר שהצהרנו על משתנה, ניתן לשנות את הערך ששמור בו, למשל:</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-c line-numbers\"><code class=\"language-c\"> <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    x <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>ננסה לכתוב משהו דומה בראסט:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value of x is: {}\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    x <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">println!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value of x is: {}\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>התכונה תסרב להתקמפל ונקבל שגיאה:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span>cannot assign twice to immutable variable <span class=\"token variable\"><span class=\"token variable\">`</span>x<span class=\"token variable\">`</span></span>\n --<span class=\"token operator\">></span> src/main.rs:4:5\n  <span class=\"token operator\">|</span>\n<span class=\"token number\">2</span> <span class=\"token operator\">|</span>     <span class=\"token builtin class-name\">let</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">|</span>         -\n  <span class=\"token operator\">|</span>         <span class=\"token operator\">|</span>\n  <span class=\"token operator\">|</span>         first assignment to <span class=\"token variable\"><span class=\"token variable\">`</span>x<span class=\"token variable\">`</span></span>\n  <span class=\"token operator\">|</span>         help: consider making this binding mutable: <span class=\"token variable\"><span class=\"token variable\">`</span>mut x<span class=\"token variable\">`</span></span>\n<span class=\"token number\">3</span> <span class=\"token operator\">|</span>     println<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The value of x is: {}\"</span>, x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">4</span> <span class=\"token operator\">|</span>     x <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">|</span>     ^^^^^ cannot assign twice to immutable variable</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>השגיאה נובעת מכך שבראסט, כברירת מחדל, ובניגוד לרוב השפות (שאני מכיר לפחות…) המשתנים הם immutable (אשמח למושג בעברית), דומה יותר ל <code class=\"language-text\">const</code> בג’אווה סקריפט, ובניגוד למשל ל <code class=\"language-text\">let</code> באותה השפה. הסיבה להתנהגות הלא סטנדרטית הזאת של השפה היא שוב על מנת לעזור לנו לתפוס שגיאות כבר בזמן הקומפילציה, הפעם שגיאות שבהן אנחנו מניחים באזור מסוים בקוד כי למשתנה יש ערך כלשהוא, אבל בפועל הערך שלו השתנה, בלי שנדע, במקום אחר. לכן, כברירת מחדל, כל המשתנים בראסט הם לא ממש משתנים.</p>\n<p>על מנת שנוכל להציב למשתנה, עלינו להצהיר עליו בצורה קצת שונה:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber 1\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>באמצעות מילת המפתח <code class=\"language-text\">mut</code> הפכנו את הטיפוס של המשתנה <code class=\"language-text\">x</code> מסוג <code class=\"language-text\">i32</code> לסוג <code class=\"language-text\">mut i32</code>, ולכן אם נריץ את התוכנה שלנו עכשיו, נקבל את התוצאה הצפויה:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span data-user=assaf data-host=ass.af></span><span></span><span></span><span></span></span>cargo run\n…\nThe value of x is: <span class=\"token number\">5</span>\nThe value of x is: <span class=\"token number\">6</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>נשים לב, שהשפה היא עדיין שפה עם טיפוסיות סטטית, כלומר הקוד הבא:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre style=\"counter-reset: linenumber 1\" class=\"language-rust line-numbers\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\nx <span class=\"token operator\">=</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>עדיין תכשל עם שגיאה:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"command-line-prompt\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span>error<span class=\"token punctuation\">[</span>E0308<span class=\"token punctuation\">]</span>: mismatched types\n --<span class=\"token operator\">></span> src/main.rs:3:9\n  <span class=\"token operator\">|</span>\n<span class=\"token number\">3</span> <span class=\"token operator\">|</span>     x <span class=\"token operator\">=</span> <span class=\"token string\">\"string\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">|</span>         ^^^^^^^^ expected integer, found <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token operator\">&amp;</span>str<span class=\"token variable\">`</span></span>\n\nerror: aborting due to previous error</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","frontmatter":{"title":"משתנים שאי אפשר לשנות (בערך)","date":"3/8/2021","fromNow":"לפני חודשיים","description":null,"tags":["rust","ראסט"]},"fields":{"slug":"/rust/vars/"}},"previous":{"fields":{"slug":"/rust/hello_world/"},"frontmatter":{"title":"בוקר טוב עולם"}},"next":{"fields":{"slug":"/rust/functions-1/"},"frontmatter":{"title":"פונקציות או לא להיות"}}},"pageContext":{"id":"71b4c8aa-c43a-5dd1-b5f3-92dbc931db80","previousPostId":"d4fbc5de-a3eb-5bfd-9c2a-6d6b13e547c5","nextPostId":"6d4e802a-9044-531e-a381-068f88cdf5e1"}},
    "staticQueryHashes": ["2841359383","3257411868"]}