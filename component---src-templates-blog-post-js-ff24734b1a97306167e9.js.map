{"version":3,"sources":["webpack://assapir.github.io/./node_modules/@babel/runtime/regenerator/index.js","webpack://assapir.github.io/./src/components/tags.js","webpack://assapir.github.io/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://assapir.github.io/./src/templates/blog-post.js","webpack://assapir.github.io/./node_modules/regenerator-runtime/runtime.js"],"names":["module","exports","Tags","tags","className","map","tag","i","Link","key","to","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","currentSlug","fields","slug","previous","next","useState","setComments","useEffect","fn","fetch","response","json","console","log","self","this","args","arguments","apply","err","undefined","frontmatter","description","excerpt","lang","itemScope","itemType","itemProp","Date","date","toLocaleDateString","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","rel","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"8GAAAA,EAAOC,QAAU,EAAjB,O,0FCGe,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC7B,OACE,uBAAKC,UAAU,QAAf,aAGGD,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,EAAAC,KAAD,CAAMC,IAAKH,EAAKI,GAAE,SAAWJ,GAC1BA,EACAH,EAAKQ,OAASJ,EAAI,EAAlB,gB,kCCXX,SAASK,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQR,EAAKS,GACpE,IACE,IAAIC,EAAON,EAAIJ,GAAKS,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAN,EAAOM,GAILF,EAAKG,KACPR,EAAQM,GAERG,QAAQT,QAAQM,GAAOI,KAAKR,EAAOC,G,sHCsEvC,EA3EyB,SAAC,GAAwB,IAAD,IAArBQ,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAcN,EAAKO,OAAOC,KACxBC,EAAmBX,EAAnBW,SAAUC,EAASZ,EAATY,KAElB,GAAgCC,cAAS,MAAxBC,GAAjB,YACAC,gBAAU,WDEG,IAA2BC,KCDrC,UAAC,sGACuBC,MAAM,sBAAsBT,GADnD,cACMU,EADN,yBAGqBA,EAASC,OAH9B,OAGQA,EAHR,OAIEL,EAAYK,GAJd,kDAMEC,QAAQC,IAAI,2BANd,yDDEG,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAI3B,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAM4B,EAAGU,MAAMJ,EAAME,GAEzB,SAASjC,EAAMI,GACbR,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQG,GAGlE,SAASH,EAAOmC,GACdxC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASmC,GAGnEpC,OAAMqC,YCPP,CAACpB,IAEJ,IAAM9B,EAAI,UAAGwB,EAAK2B,YAAYnD,YAApB,QAA4B,GACtC,OACE,gBAAC,IAAD,CAAQuB,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,IAAD,CACEG,MAAOL,EAAK2B,YAAYtB,MACxBuB,YAAa5B,EAAK2B,YAAYC,aAAe5B,EAAK6B,QAClDC,KAAK,OAEP,2BACErD,UAAU,YACVsD,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYjC,EAAK2B,YAAYtB,OAC1C,2BACG,IAAI6B,KAAKlC,EAAK2B,YAAYQ,MAAMC,qBAChC5D,EAAKQ,OAAS,GAAK,gBAAC,IAAD,CAAMR,KAAMA,MAGpC,2BACE6D,wBAAyB,CAAEC,OAAQtC,EAAKuC,MACxCN,SAAS,gBAEX,4BAEF,uBAAKxD,UAAU,iBACb,sBACE+D,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGpC,GACC,gBAAC,EAAA5B,KAAD,CAAME,GAAI0B,EAASF,OAAOC,KAAMsC,IAAI,QAApC,KACKrC,EAASkB,YAAYtB,QAI9B,0BACGK,GACC,gBAAC,EAAA7B,KAAD,CAAME,GAAI2B,EAAKH,OAAOC,KAAMsC,IAAI,QAC7BpC,EAAKiB,YAAYtB,MADpB,Y,iBChEd,IAAI0C,EAAW,SAAUzE,GACvB,aAEA,IAEIoD,EAFAsB,EAAKC,OAAOC,UACZC,EAASH,EAAGI,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOC,EAAKhF,EAAKW,GAOxB,OANAwD,OAAOc,eAAeD,EAAKhF,EAAK,CAC9BW,MAAOA,EACPuE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELJ,EAAIhF,GAEb,IAEE+E,EAAO,GAAI,IACX,MAAOpC,GACPoC,EAAS,SAASC,EAAKhF,EAAKW,GAC1B,OAAOqE,EAAIhF,GAAOW,GAItB,SAAS0E,EAAKC,EAASC,EAASjD,EAAMkD,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQnB,qBAAqBsB,EAAYH,EAAUG,EAC/EC,EAAYxB,OAAOyB,OAAOH,EAAerB,WACzCyB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAsMZ,SAA0BT,EAAShD,EAAMuD,GACvC,IAAIG,EAAQC,EAEZ,OAAO,SAAgBC,EAAQzF,GAC7B,GAAIuF,IAAUG,EACZ,MAAM,IAAIC,MAAM,gCAGlB,GAAIJ,IAAUK,EAAmB,CAC/B,GAAe,UAAXH,EACF,MAAMzF,EAKR,OAAO6F,IAMT,IAHAT,EAAQK,OAASA,EACjBL,EAAQpF,IAAMA,IAED,CACX,IAAI8F,EAAWV,EAAQU,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUV,GACnD,GAAIW,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBX,EAAQK,OAGVL,EAAQc,KAAOd,EAAQe,MAAQf,EAAQpF,SAElC,GAAuB,UAAnBoF,EAAQK,OAAoB,CACrC,GAAIF,IAAUC,EAEZ,MADAD,EAAQK,EACFR,EAAQpF,IAGhBoF,EAAQgB,kBAAkBhB,EAAQpF,SAEN,WAAnBoF,EAAQK,QACjBL,EAAQiB,OAAO,SAAUjB,EAAQpF,KAGnCuF,EAAQG,EAER,IAAIY,EAASC,EAAS1B,EAAShD,EAAMuD,GACrC,GAAoB,WAAhBkB,EAAOE,KAAmB,CAO5B,GAJAjB,EAAQH,EAAQhF,KACZwF,EACAa,EAEAH,EAAOtG,MAAQiG,EACjB,SAGF,MAAO,CACL/F,MAAOoG,EAAOtG,IACdI,KAAMgF,EAAQhF,MAGS,UAAhBkG,EAAOE,OAChBjB,EAAQK,EAGRR,EAAQK,OAAS,QACjBL,EAAQpF,IAAMsG,EAAOtG,OA9QP0G,CAAiB7B,EAAShD,EAAMuD,GAE7CF,EAcT,SAASqB,EAAShF,EAAIgD,EAAKvE,GACzB,IACE,MAAO,CAAEwG,KAAM,SAAUxG,IAAKuB,EAAGoF,KAAKpC,EAAKvE,IAC3C,MAAOkC,GACP,MAAO,CAAEsE,KAAM,QAASxG,IAAKkC,IAhBjCnD,EAAQ6F,KAAOA,EAoBf,IAAIY,EAAyB,iBACzBiB,EAAyB,iBACzBf,EAAoB,YACpBE,EAAoB,YAIpBK,EAAmB,GAMvB,SAAShB,KACT,SAAS2B,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBA,EAAkB9C,GAAkB,WAClC,OAAOlC,MAGT,IAAIiF,EAAWrD,OAAOsD,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BxD,GAC5BG,EAAO+C,KAAKM,EAAyBjD,KAGvC8C,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2BlD,UAClCsB,EAAUtB,UAAYD,OAAOyB,OAAO2B,GAWtC,SAASM,EAAsBzD,GAC7B,CAAC,OAAQ,QAAS,UAAU0D,SAAQ,SAAS5B,GAC3CnB,EAAOX,EAAW8B,GAAQ,SAASzF,GACjC,OAAO8B,KAAKwD,QAAQG,EAAQzF,SAkClC,SAASsH,EAAcpC,EAAWqC,GAChC,SAASC,EAAO/B,EAAQzF,EAAKJ,EAASC,GACpC,IAAIyG,EAASC,EAASrB,EAAUO,GAASP,EAAWlF,GACpD,GAAoB,UAAhBsG,EAAOE,KAEJ,CACL,IAAIiB,EAASnB,EAAOtG,IAChBE,EAAQuH,EAAOvH,MACnB,OAAIA,GACiB,iBAAVA,GACP0D,EAAO+C,KAAKzG,EAAO,WACdqH,EAAY3H,QAAQM,EAAMwH,SAASpH,MAAK,SAASJ,GACtDsH,EAAO,OAAQtH,EAAON,EAASC,MAC9B,SAASqC,GACVsF,EAAO,QAAStF,EAAKtC,EAASC,MAI3B0H,EAAY3H,QAAQM,GAAOI,MAAK,SAASqH,GAI9CF,EAAOvH,MAAQyH,EACf/H,EAAQ6H,MACP,SAAStH,GAGV,OAAOqH,EAAO,QAASrH,EAAOP,EAASC,MAvBzCA,EAAOyG,EAAOtG,KA4BlB,IAAI4H,EAgCJ9F,KAAKwD,QA9BL,SAAiBG,EAAQzF,GACvB,SAAS6H,IACP,OAAO,IAAIN,GAAY,SAAS3H,EAASC,GACvC2H,EAAO/B,EAAQzF,EAAKJ,EAASC,MAIjC,OAAO+H,EAaLA,EAAkBA,EAAgBtH,KAChCuH,EAGAA,GACEA,KAkHV,SAAS7B,EAAoBF,EAAUV,GACrC,IAAIK,EAASK,EAAS7B,SAASmB,EAAQK,QACvC,GAAIA,IAAWtD,EAAW,CAKxB,GAFAiD,EAAQU,SAAW,KAEI,UAAnBV,EAAQK,OAAoB,CAE9B,GAAIK,EAAS7B,SAAiB,SAG5BmB,EAAQK,OAAS,SACjBL,EAAQpF,IAAMmC,EACd6D,EAAoBF,EAAUV,GAEP,UAAnBA,EAAQK,QAGV,OAAOQ,EAIXb,EAAQK,OAAS,QACjBL,EAAQpF,IAAM,IAAI8H,UAChB,kDAGJ,OAAO7B,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS7B,SAAUmB,EAAQpF,KAEzD,GAAoB,UAAhBsG,EAAOE,KAIT,OAHApB,EAAQK,OAAS,QACjBL,EAAQpF,IAAMsG,EAAOtG,IACrBoF,EAAQU,SAAW,KACZG,EAGT,IAAIhG,EAAOqG,EAAOtG,IAElB,OAAMC,EAOFA,EAAKG,MAGPgF,EAAQU,EAASiC,YAAc9H,EAAKC,MAGpCkF,EAAQjE,KAAO2E,EAASkC,QAQD,WAAnB5C,EAAQK,SACVL,EAAQK,OAAS,OACjBL,EAAQpF,IAAMmC,GAUlBiD,EAAQU,SAAW,KACZG,GANEhG,GA3BPmF,EAAQK,OAAS,QACjBL,EAAQpF,IAAM,IAAI8H,UAAU,oCAC5B1C,EAAQU,SAAW,KACZG,GAoDX,SAASgC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxBpG,KAAK0G,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAI7B,EAAS6B,EAAMQ,YAAc,GACjCrC,EAAOE,KAAO,gBACPF,EAAOtG,IACdmI,EAAMQ,WAAarC,EAGrB,SAASjB,EAAQN,GAIfjD,KAAK0G,WAAa,CAAC,CAAEJ,OAAQ,SAC7BrD,EAAYsC,QAAQY,EAAcnG,MAClCA,KAAK8G,OAAM,GA8Bb,SAAS1B,EAAO2B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAAS7E,GAC9B,GAAI8E,EACF,OAAOA,EAAenC,KAAKkC,GAG7B,GAA6B,mBAAlBA,EAAS1H,KAClB,OAAO0H,EAGT,IAAKE,MAAMF,EAASpJ,QAAS,CAC3B,IAAIJ,GAAK,EAAG8B,EAAO,SAASA,IAC1B,OAAS9B,EAAIwJ,EAASpJ,QACpB,GAAImE,EAAO+C,KAAKkC,EAAUxJ,GAGxB,OAFA8B,EAAKjB,MAAQ2I,EAASxJ,GACtB8B,EAAKf,MAAO,EACLe,EAOX,OAHAA,EAAKjB,MAAQiC,EACbhB,EAAKf,MAAO,EAELe,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAM0E,GAIjB,SAASA,IACP,MAAO,CAAE3F,MAAOiC,EAAW/B,MAAM,GA+MnC,OA5mBAwG,EAAkBjD,UAAYwD,EAAG6B,YAAcnC,EAC/CA,EAA2BmC,YAAcpC,EACzCA,EAAkBqC,YAAc3E,EAC9BuC,EACAzC,EACA,qBAaFrF,EAAQmK,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASxC,GAG2B,uBAAnCwC,EAAKH,aAAeG,EAAKC,QAIhCtK,EAAQuK,KAAO,SAASH,GAQtB,OAPIzF,OAAO6F,eACT7F,OAAO6F,eAAeJ,EAAQtC,IAE9BsC,EAAOK,UAAY3C,EACnBvC,EAAO6E,EAAQ/E,EAAmB,sBAEpC+E,EAAOxF,UAAYD,OAAOyB,OAAOgC,GAC1BgC,GAOTpK,EAAQ0K,MAAQ,SAASzJ,GACvB,MAAO,CAAE0H,QAAS1H,IAsEpBoH,EAAsBE,EAAc3D,WACpC2D,EAAc3D,UAAUO,GAAuB,WAC7C,OAAOpC,MAET/C,EAAQuI,cAAgBA,EAKxBvI,EAAQ2K,MAAQ,SAAS7E,EAASC,EAASjD,EAAMkD,EAAawC,QACxC,IAAhBA,IAAwBA,EAAclH,SAE1C,IAAIsJ,EAAO,IAAIrC,EACb1C,EAAKC,EAASC,EAASjD,EAAMkD,GAC7BwC,GAGF,OAAOxI,EAAQmK,oBAAoBpE,GAC/B6E,EACAA,EAAKxI,OAAOb,MAAK,SAASmH,GACxB,OAAOA,EAAOrH,KAAOqH,EAAOvH,MAAQyJ,EAAKxI,WAuKjDiG,EAAsBD,GAEtB7C,EAAO6C,EAAI/C,EAAmB,aAO9B+C,EAAGnD,GAAkB,WACnB,OAAOlC,MAGTqF,EAAGyC,SAAW,WACZ,MAAO,sBAkCT7K,EAAQ8K,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAItK,KAAOuK,EACdD,EAAKpB,KAAKlJ,GAMZ,OAJAsK,EAAKE,UAIE,SAAS5I,IACd,KAAO0I,EAAKpK,QAAQ,CAClB,IAAIF,EAAMsK,EAAKG,MACf,GAAIzK,KAAOuK,EAGT,OAFA3I,EAAKjB,MAAQX,EACb4B,EAAKf,MAAO,EACLe,EAQX,OADAA,EAAKf,MAAO,EACLe,IAsCXpC,EAAQmI,OAASA,EAMjB7B,EAAQ1B,UAAY,CAClBqF,YAAa3D,EAEbuD,MAAO,SAASqB,GAcd,GAbAnI,KAAKoI,KAAO,EACZpI,KAAKX,KAAO,EAGZW,KAAKoE,KAAOpE,KAAKqE,MAAQhE,EACzBL,KAAK1B,MAAO,EACZ0B,KAAKgE,SAAW,KAEhBhE,KAAK2D,OAAS,OACd3D,KAAK9B,IAAMmC,EAEXL,KAAK0G,WAAWnB,QAAQqB,IAEnBuB,EACH,IAAK,IAAIZ,KAAQvH,KAEQ,MAAnBuH,EAAKc,OAAO,IACZvG,EAAO+C,KAAK7E,KAAMuH,KACjBN,OAAOM,EAAKe,MAAM,MACrBtI,KAAKuH,GAAQlH,IAMrBkI,KAAM,WACJvI,KAAK1B,MAAO,EAEZ,IACIkK,EADYxI,KAAK0G,WAAW,GACLG,WAC3B,GAAwB,UAApB2B,EAAW9D,KACb,MAAM8D,EAAWtK,IAGnB,OAAO8B,KAAKyI,MAGdnE,kBAAmB,SAASoE,GAC1B,GAAI1I,KAAK1B,KACP,MAAMoK,EAGR,IAAIpF,EAAUtD,KACd,SAAS2I,EAAOC,EAAKC,GAYnB,OAXArE,EAAOE,KAAO,QACdF,EAAOtG,IAAMwK,EACbpF,EAAQjE,KAAOuJ,EAEXC,IAGFvF,EAAQK,OAAS,OACjBL,EAAQpF,IAAMmC,KAGNwI,EAGZ,IAAK,IAAItL,EAAIyC,KAAK0G,WAAW/I,OAAS,EAAGJ,GAAK,IAAKA,EAAG,CACpD,IAAI8I,EAAQrG,KAAK0G,WAAWnJ,GACxBiH,EAAS6B,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOqC,EAAO,OAGhB,GAAItC,EAAMC,QAAUtG,KAAKoI,KAAM,CAC7B,IAAIU,EAAWhH,EAAO+C,KAAKwB,EAAO,YAC9B0C,EAAajH,EAAO+C,KAAKwB,EAAO,cAEpC,GAAIyC,GAAYC,EAAY,CAC1B,GAAI/I,KAAKoI,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,GACzB,GAAIvG,KAAKoI,KAAO/B,EAAMG,WAC3B,OAAOmC,EAAOtC,EAAMG,iBAGjB,GAAIsC,GACT,GAAI9I,KAAKoI,KAAO/B,EAAME,SACpB,OAAOoC,EAAOtC,EAAME,UAAU,OAG3B,KAAIwC,EAMT,MAAM,IAAIlF,MAAM,0CALhB,GAAI7D,KAAKoI,KAAO/B,EAAMG,WACpB,OAAOmC,EAAOtC,EAAMG,gBAU9BjC,OAAQ,SAASG,EAAMxG,GACrB,IAAK,IAAIX,EAAIyC,KAAK0G,WAAW/I,OAAS,EAAGJ,GAAK,IAAKA,EAAG,CACpD,IAAI8I,EAAQrG,KAAK0G,WAAWnJ,GAC5B,GAAI8I,EAAMC,QAAUtG,KAAKoI,MACrBtG,EAAO+C,KAAKwB,EAAO,eACnBrG,KAAKoI,KAAO/B,EAAMG,WAAY,CAChC,IAAIwC,EAAe3C,EACnB,OAIA2C,IACU,UAATtE,GACS,aAATA,IACDsE,EAAa1C,QAAUpI,GACvBA,GAAO8K,EAAaxC,aAGtBwC,EAAe,MAGjB,IAAIxE,EAASwE,EAAeA,EAAanC,WAAa,GAItD,OAHArC,EAAOE,KAAOA,EACdF,EAAOtG,IAAMA,EAET8K,GACFhJ,KAAK2D,OAAS,OACd3D,KAAKX,KAAO2J,EAAaxC,WAClBrC,GAGFnE,KAAKiJ,SAASzE,IAGvByE,SAAU,SAASzE,EAAQiC,GACzB,GAAoB,UAAhBjC,EAAOE,KACT,MAAMF,EAAOtG,IAcf,MAXoB,UAAhBsG,EAAOE,MACS,aAAhBF,EAAOE,KACT1E,KAAKX,KAAOmF,EAAOtG,IACM,WAAhBsG,EAAOE,MAChB1E,KAAKyI,KAAOzI,KAAK9B,IAAMsG,EAAOtG,IAC9B8B,KAAK2D,OAAS,SACd3D,KAAKX,KAAO,OACa,WAAhBmF,EAAOE,MAAqB+B,IACrCzG,KAAKX,KAAOoH,GAGPtC,GAGT+E,OAAQ,SAAS1C,GACf,IAAK,IAAIjJ,EAAIyC,KAAK0G,WAAW/I,OAAS,EAAGJ,GAAK,IAAKA,EAAG,CACpD,IAAI8I,EAAQrG,KAAK0G,WAAWnJ,GAC5B,GAAI8I,EAAMG,aAAeA,EAGvB,OAFAxG,KAAKiJ,SAAS5C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPlC,IAKb,MAAS,SAASmC,GAChB,IAAK,IAAI/I,EAAIyC,KAAK0G,WAAW/I,OAAS,EAAGJ,GAAK,IAAKA,EAAG,CACpD,IAAI8I,EAAQrG,KAAK0G,WAAWnJ,GAC5B,GAAI8I,EAAMC,SAAWA,EAAQ,CAC3B,IAAI9B,EAAS6B,EAAMQ,WACnB,GAAoB,UAAhBrC,EAAOE,KAAkB,CAC3B,IAAIyE,EAAS3E,EAAOtG,IACpB0I,EAAcP,GAEhB,OAAO8C,GAMX,MAAM,IAAItF,MAAM,0BAGlBuF,cAAe,SAASrC,EAAUd,EAAYC,GAa5C,OAZAlG,KAAKgE,SAAW,CACd7B,SAAUiD,EAAO2B,GACjBd,WAAYA,EACZC,QAASA,GAGS,SAAhBlG,KAAK2D,SAGP3D,KAAK9B,IAAMmC,GAGN8D,IAQJlH,EA7sBK,CAotBiBD,EAAOC,SAGtC,IACEoM,mBAAqB3H,EACrB,MAAO4H,GAUPC,SAAS,IAAK,yBAAdA,CAAwC7H","file":"component---src-templates-blog-post-js-ff24734b1a97306167e9.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default function Tags({ tags }) {\n  return (\n    <div className=\"tags\">\n      תגיות:\n      {` `}\n      {tags.map((tag, i) => (\n        <Link key={tag} to={`/tags/${tag}`}>\n          {tag}\n          {tags.length > i + 1 ? `, ` : ` `}\n        </Link>\n      ))}\n    </div>\n  )\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useEffect, useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Tags from \"../components/tags\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const currentSlug = post.fields.slug\n  const { previous, next } = data\n\n  const [comments, setComments] = useState(null)\n  useEffect(() => {\n    ;(async () => {\n      const response = await fetch(`/api/comments?slug=${currentSlug}`)\n      try {\n        const json = await response.json()\n        setComments(json)\n      } catch (error) {\n        console.log(\"unable to show comments\")\n      }\n    })()\n  }, [currentSlug])\n\n  const tags = post.frontmatter.tags ?? []\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        lang=\"he\"\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <div>\n            {new Date(post.frontmatter.date).toLocaleDateString()}\n            {tags.length > 0 && <Tags tags={tags} />}\n          </div>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date\n        description\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}