{"version":3,"sources":["webpack://assapir.github.io/./src/components/tags.js","webpack://assapir.github.io/./src/pages/index.js"],"names":["Tags","tags","className","map","tag","i","Link","key","to","length","data","location","useEffect","document","documentElement","dir","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","style","listStyle","post","frontmatter","fields","slug","itemScope","itemType","itemProp","date","fromNow","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"mLAGe,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC7B,OACE,uBAAKC,UAAU,QAAf,aAGGD,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,gBAAC,EAAAC,KAAD,CAAMC,IAAKH,EAAKI,GAAE,SAAWJ,GAC1BA,EACAH,EAAKQ,OAASJ,EAAI,EAAlB,gB,yGCgEX,UAnEkB,SAAC,GAAwB,IAAD,EAArBK,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UACzBC,gBAAU,WACRC,SAASC,gBAAgBC,IAAM,SAEjC,IAAMC,GAAY,UAAAN,EAAKO,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQV,EAAKW,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMX,OAEN,gBAAC,IAAD,CAAQE,SAAUA,EAAUQ,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,gBAAC,IAAD,MACA,qBAAGJ,IAAI,OAAP,8JAUJ,gBAAC,IAAD,CAAQJ,SAAUA,EAAUQ,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAOH,IACZ,sBAAIO,MAAO,CAAEC,UAAU,SACpBJ,EAAMjB,KAAI,SAAAsB,GACT,IAAMN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KAC9C3B,EAAOwB,EAAKC,YAAYzB,MAAQ,GAEtC,OACE,sBAAIM,IAAKkB,EAAKE,OAAOC,MACnB,2BACE1B,UAAU,iBACV2B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAxB,KAAD,CAAME,GAAIiB,EAAKE,OAAOC,KAAMG,SAAS,OACnC,wBAAMA,SAAS,YAAYZ,KAG/B,6BACMM,EAAKC,YAAYM,KADvB,KACgCP,EAAKC,YAAYO,SAEhDhC,EAAKQ,OAAS,GAAK,gBAAC,IAAD,CAAMR,KAAMA,KAElC,+BACE,qBACEiC,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAE/CN,SAAS,uBAQvB,0BACE,gBAAC,EAAAzB,KAAD,CAAME,GAAG,UAAT","file":"component---src-pages-index-js-664fa9fd28f93ef532fa.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default function Tags({ tags }) {\n  return (\n    <div className=\"tags\">\n      תגיות:\n      {` `}\n      {tags.map((tag, i) => (\n        <Link key={tag} to={`/tags/${tag}`}>\n          {tag}\n          {tags.length > i + 1 ? `, ` : ` `}\n        </Link>\n      ))}\n    </div>\n  )\n}\n","import React, { useEffect } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Tags from \"../components/tags\"\n\nconst BlogIndex = ({ data, location }) => {\n  useEffect(() => {\n    document.documentElement.dir = \"rtl\"\n  })\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p dir=\"ltr\">\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={siteTitle} />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const tags = post.frontmatter.tags || []\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>\n                    {`${post.frontmatter.date}, ${post.frontmatter.fromNow}`}\n                  </small>\n                  {tags.length > 0 && <Tags tags={tags} />}\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <h6>\n        <Link to=\"/tags/\">לרשימת כל התגיות</Link>\n      </h6>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt(pruneLength: 200, format: HTML)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"l\", locale: \"he\")\n          fromNow: date(fromNow: true, locale: \"he\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}